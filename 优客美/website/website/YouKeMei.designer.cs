#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace website
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="YouKeMei")]
	public partial class YouKeMeiDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Inserttb_Article(tb_Article instance);
    partial void Updatetb_Article(tb_Article instance);
    partial void Deletetb_Article(tb_Article instance);
    partial void Inserttb_ArticleType(tb_ArticleType instance);
    partial void Updatetb_ArticleType(tb_ArticleType instance);
    partial void Deletetb_ArticleType(tb_ArticleType instance);
    #endregion
		
		public YouKeMeiDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["YouKeMeiConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public YouKeMeiDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public YouKeMeiDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public YouKeMeiDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public YouKeMeiDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tb_Article> tb_Article
		{
			get
			{
				return this.GetTable<tb_Article>();
			}
		}
		
		public System.Data.Linq.Table<tb_ArticleType> tb_ArticleType
		{
			get
			{
				return this.GetTable<tb_ArticleType>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_Article")]
	public partial class tb_Article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _Author;
		
		private string _InfoSummary;
		
		private string _InfoContent;
		
		private System.Nullable<int> _HitCount;
		
		private System.Nullable<System.DateTime> _PublishTime;
		
		private string _InfoType;
		
		private string _PictureURL;
		
		private string _AttachmentURL;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnInfoSummaryChanging(string value);
    partial void OnInfoSummaryChanged();
    partial void OnInfoContentChanging(string value);
    partial void OnInfoContentChanged();
    partial void OnHitCountChanging(System.Nullable<int> value);
    partial void OnHitCountChanged();
    partial void OnPublishTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishTimeChanged();
    partial void OnInfoTypeChanging(string value);
    partial void OnInfoTypeChanged();
    partial void OnPictureURLChanging(string value);
    partial void OnPictureURLChanged();
    partial void OnAttachmentURLChanging(string value);
    partial void OnAttachmentURLChanged();
    #endregion
		
		public tb_Article()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(50)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoSummary", DbType="NVarChar(200)")]
		public string InfoSummary
		{
			get
			{
				return this._InfoSummary;
			}
			set
			{
				if ((this._InfoSummary != value))
				{
					this.OnInfoSummaryChanging(value);
					this.SendPropertyChanging();
					this._InfoSummary = value;
					this.SendPropertyChanged("InfoSummary");
					this.OnInfoSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoContent", DbType="NVarChar(MAX)")]
		public string InfoContent
		{
			get
			{
				return this._InfoContent;
			}
			set
			{
				if ((this._InfoContent != value))
				{
					this.OnInfoContentChanging(value);
					this.SendPropertyChanging();
					this._InfoContent = value;
					this.SendPropertyChanged("InfoContent");
					this.OnInfoContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HitCount", DbType="Int")]
		public System.Nullable<int> HitCount
		{
			get
			{
				return this._HitCount;
			}
			set
			{
				if ((this._HitCount != value))
				{
					this.OnHitCountChanging(value);
					this.SendPropertyChanging();
					this._HitCount = value;
					this.SendPropertyChanged("HitCount");
					this.OnHitCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishTime
		{
			get
			{
				return this._PublishTime;
			}
			set
			{
				if ((this._PublishTime != value))
				{
					this.OnPublishTimeChanging(value);
					this.SendPropertyChanging();
					this._PublishTime = value;
					this.SendPropertyChanged("PublishTime");
					this.OnPublishTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InfoType", DbType="NVarChar(50)")]
		public string InfoType
		{
			get
			{
				return this._InfoType;
			}
			set
			{
				if ((this._InfoType != value))
				{
					this.OnInfoTypeChanging(value);
					this.SendPropertyChanging();
					this._InfoType = value;
					this.SendPropertyChanged("InfoType");
					this.OnInfoTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureURL", DbType="NVarChar(200)")]
		public string PictureURL
		{
			get
			{
				return this._PictureURL;
			}
			set
			{
				if ((this._PictureURL != value))
				{
					this.OnPictureURLChanging(value);
					this.SendPropertyChanging();
					this._PictureURL = value;
					this.SendPropertyChanged("PictureURL");
					this.OnPictureURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentURL", DbType="NVarChar(200)")]
		public string AttachmentURL
		{
			get
			{
				return this._AttachmentURL;
			}
			set
			{
				if ((this._AttachmentURL != value))
				{
					this.OnAttachmentURLChanging(value);
					this.SendPropertyChanging();
					this._AttachmentURL = value;
					this.SendPropertyChanged("AttachmentURL");
					this.OnAttachmentURLChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_ArticleType")]
	public partial class tb_ArticleType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ArticleType;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnArticleTypeChanging(string value);
    partial void OnArticleTypeChanged();
    #endregion
		
		public tb_ArticleType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleType", DbType="NVarChar(50)")]
		public string ArticleType
		{
			get
			{
				return this._ArticleType;
			}
			set
			{
				if ((this._ArticleType != value))
				{
					this.OnArticleTypeChanging(value);
					this.SendPropertyChanging();
					this._ArticleType = value;
					this.SendPropertyChanged("ArticleType");
					this.OnArticleTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
